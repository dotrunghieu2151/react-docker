user nginx;
# you must set worker processes based on your CPU cores, nginx does not benefit from setting more than that
worker_processes auto; #some last versions calculate it automatically

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 100000;

# only log critical errors
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

load_module /usr/local/nginx/modules/ngx_http_brotli_filter_module.so; # for compressing responses on-the-fly
load_module /usr/local/nginx/modules/ngx_http_brotli_static_module.so; # for serving pre-compressed files

# provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 50000;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}

http {
  map $status $loggable {
    ~^[23] 0;
    default 1;
  }

  access_log /var/log/nginx/access.log combined buffer=512k flush=1m if=$loggable;

  # send headers in one piece, it is better than sending them one by one
  tcp_nopush on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # maximum time between packets the client can pause when sending nginx any data
  client_body_timeout 10s;
  
  # maximum time the client has to send the entire header to nginx
  client_header_timeout 10s;
  
  # timeout which a single keep-alive client connection will stay open
  keepalive_timeout 65s;

  # maximum time between packets nginx is allowed to pause when sending the client data
  send_timeout 10s;

  # limit the number of connections per single IP
  limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

  # limit the number of requests for a given session
  limit_req_zone $binary_remote_addr zone=req_limit_per_ip_api:10m rate=24r/s;

    # limit the number of requests for static files
  limit_req_zone $binary_remote_addr zone=req_limit_per_ip_static:10m rate=100r/s;

  include /etc/nginx/mime.types;
  include /etc/nginx/custom_templates/default.conf;
}